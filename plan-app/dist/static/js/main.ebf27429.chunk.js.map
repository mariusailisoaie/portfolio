{"version":3,"sources":["components/layout/SignedInLinks.js","components/store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","components/store/actions/projectActions.js","App.js","serviceWorker.js","components/store/reducers/authReducer.js","components/store/reducers/projectReducer.js","components/store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["connect","dispatch","logOut","state","_ref2","getFirebase","auth","signOut","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","href","profile","initials","SignedOutLinks","console","log","authStatus","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","_this","logIn","handleChange","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","getState","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","message","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","firebaseConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebf27429.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/create'>New Project</NavLink></li>\r\n      <li><a onClick={ props.logOut } href=\"/\">Log Out</a></li>\r\n      <li><NavLink to='/' className=\"btn btn-floating teal darken-2\">{props.profile.initials}</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(logOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const logIn = credentials => {\r\n\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => dispatch({ type: 'LOGIN_SUCCESS' }))\r\n      .catch(err => dispatch({ type: 'LOGIN_ERROR', err }));\r\n  }\r\n}\r\n\r\nexport const logOut = () => {\r\n  return (dispatch, state, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => dispatch({ type: 'SIGNOUT_SUCCESS' }));\r\n  }\r\n}\r\n\r\nexport const signUp = newUser => {\r\n  return(dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n    .then(res => {\r\n      return firestore.collection('users').doc(res.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    })\r\n    .then(() => {\r\n      dispatch({type: 'SIGNUP_SUCCESS'});\r\n    })\r\n    .catch(err => {\r\n      dispatch({type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n      <li><NavLink to='/signin'>Log In</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const { authStatus, profile } = props;\r\n\r\n  const links = authStatus.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">ProjectManager</Link>\r\n\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapPropsToState = state => {\r\n  console.log(state);\r\n  return {\r\n    authStatus: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapPropsToState)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  console.log(notifications);\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            { \r\n              notifications && notifications.map(notification => {\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <span className=\"blue-text\">{ notification.user } </span>\r\n                    <span>{ notification.content }</span>\r\n                    <div className=\"grey-text notification-date\">\r\n                      {moment(notification.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id} key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n          )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, authStatus, notifications } = this.props;\r\n    if(!authStatus.uid) return <Redirect to='/signin'/>\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col sm12 m6\">\r\n            <ProjectList projects={projects}/>\r\n          </div>\r\n\r\n          <div className=\"col sm12 m5 offset-m1\">\r\n            <Notifications notifications={notifications}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    authStatus: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);","import React from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, authStatus } = props;\r\n  if(!authStatus.uid) return <Redirect to='/signin'/>\r\n  \r\n  if (project) {   \r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{ project.title }</span>\r\n            <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n\r\n  return {\r\n    project,\r\n    authStatus: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection : 'projects'}\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logIn } from '../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.logIn(this.state);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  render() {\r\n    const { authError, authStatus } = this.props;\r\n    if(authStatus.uid) return <Redirect to='/'/>\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn teal darken-2 z-depth-0\">Sign In</button>\r\n          </div>\r\n\r\n          <div className=\"center\">\r\n            { \r\n              authError ? <p>{ authError }</p> : <p>{ authError }</p>\r\n            }\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    authStatus: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: creds => dispatch(logIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  render() {\r\n    const { authStatus, authError } = this.props;\r\n    if(authStatus.uid) return <Redirect to='/'/>\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn teal darken-2 z-depth-0\">Sign Up</button>\r\n          </div>\r\n\r\n          <div className=\"center red-text\">\r\n            { authError ? <p>{authError.message}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authStatus: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id] : e.target.value\r\n    });\r\n  }\r\n  render() {\r\n    const { authStatus } = this.props;\r\n    if(!authStatus.uid) return <Redirect to='signin'/>\r\n\r\n    return (\r\n      <div className=\"container\">\r\n      <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn teal darken-2 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authStatus: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n\n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component={ ProjectDetails } />\n            <Route path='/signin' component= { SignIn } />\n            <Route path='/signup' component= { SignUp } />\n            <Route path='/create' component= { CreateProject } />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n    console.log('login failed');\r\n      return {\r\n        ...state,\r\n        authError: 'LogIn Failed'\r\n      }      \r\n    case 'LOGIN_SUCCESS':\r\n    console.log('login succeeded');\r\n      return {\r\n        ...state,\r\n        authError: 'LogIn Success'\r\n      }\r\n    case 'SIGNOUT_SUCCESS':\r\n    console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n    console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: 'SignUp Success'\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n    console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n  projects: [\r\n    {id: \"1\", title: \"Finding Mario\", content: 'ad'},\r\n    {id: \"2\", title: \"The universe is big\", content: 'ad'},\r\n    {id: \"3\", title: \"The car of the year\", content: 'ad'}\r\n  ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch(action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('created project', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('create project error');\r\n      return state;\r\n    default: \r\n      // console.log('default');\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBcheiqtGixC8pru0tOgD5D7h1YlI94TVE\",\r\n  authDomain: \"plan-react-app.firebaseapp.com\",\r\n  databaseURL: \"https://plan-react-app.firebaseio.com\",\r\n  projectId: \"plan-react-app\",\r\n  storageBucket: \"plan-react-app.appspot.com\",\r\n  messagingSenderId: \"954926314000\"\r\n};\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './components/store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport firebaseConfig from '../src/config/firebaseConfig';\n\nconst store = createStore(rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(firebaseConfig,  {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n    reduxFirestore(firebaseConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}